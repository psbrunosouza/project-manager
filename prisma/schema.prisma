generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  avatar    String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  role      Role?     @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  roleId    Int?      @map("role_id")
  teams     Team[]

  @@map("users")
}

model Role {
  id          Int       @id @default(autoincrement())
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  users       User[]
  methods     Method[]

  @@map("roles")
}

model Method {
  id          Int       @id @default(autoincrement())
  description String
  code        String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  roles       Role[]

  @@map("methods")
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  cover       String?
  startedAt   DateTime   @default(now()) @map("started_at")
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime?  @map("deleted_at")
  finishedAt  DateTime?  @map("finished_at")
  teams       Team[]
  campaigns   Campaign[]

  @@map("projects")
}

model Campaign {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  cover       String?
  startedAt   DateTime  @default(now()) @map("started_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  finishedAt  DateTime? @map("finished_at")
  Project     Project?  @relation(fields: [projectId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  projectId   Int?      @map("project_id")
  tasks       Task[]

  @@map("campaigns")
}

model Category {
  id          Int       @id @default(autoincrement())
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  tasks       Task[]

  @@map("categories")
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  startedAt   DateTime  @default(now()) @map("started_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  finishedAt  DateTime? @map("finished_at")
  Campaign    Campaign? @relation(fields: [campaignId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  campaignId  Int?      @map("campaign_id")
  Category    Category? @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  categoryId  Int?      @map("category_id")

  @@map("tasks")
}

model Team {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime?  @map("deleted_at")
  Project   Project?   @relation(fields: [projectId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  projectId Int?       @map("project_id")
  roles     TeamRole[]
  users     User[]

  @@map("teams")
}

model TeamRole {
  id          Int              @id @default(autoincrement())
  description String
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime?        @map("deleted_at")
  team        Team?            @relation(fields: [teamId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teamId      Int?             @map("team_id")
  methods     TeamRoleMethod[]

  @@map("team_roles")
}

model TeamRoleMethod {
  id          Int        @id @default(autoincrement())
  description String
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at")
  deletedAt   DateTime?  @map("deleted_at")
  roles       TeamRole[]

  @@map("team_role_methods")
}
